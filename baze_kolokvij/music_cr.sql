DROP TABLE IF EXISTS ARTIST CASCADE;
DROP TABLE IF EXISTS ALBUM CASCADE;
DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS TRACK CASCADE;
DROP TABLE IF EXISTS INVOICE_LINE CASCADE;
DROP TABLE IF EXISTS INVOICE CASCADE;
DROP TABLE IF EXISTS CUSTOMER CASCADE;

CREATE TABLE ARTIST(
	ARTIST_ID INTEGER NOT NULL CONSTRAINT ARTIST_PK PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL
);

CREATE TABLE ALBUM(
	ALBUM_ID INTEGER NOT NULL CONSTRAINT ALBUM_PK PRIMARY KEY,
	TITLE VARCHAR(50) NOT NULL,
	ARTIST_ID INTEGER NOT NULL CONSTRAINT ART_ALB_FK REFERENCES ARTIST(ARTIST_ID)
);

CREATE TABLE GENRE(
	GENRE_ID INTEGER NOT NULL CONSTRAINT GENRE_PK PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL
);

CREATE TABLE TRACK(
	TRACK_ID INTEGER NOT NULL CONSTRAINT TRACK_PK PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL,
	COMPOSER VARCHAR(100) NOT NULL,
	SECONDS INTEGER NOT NULL,
	UNIT_PRICE NUMERIC(5,2) NOT NULL,
	GENRE_ID INTEGER NOT NULL CONSTRAINT GEN_TR_FK REFERENCES GENRE(GENRE_ID),
	ALBUM_ID INTEGER NOT NULL CONSTRAINT ALB_TR_FK REFERENCES ALBUM(ALBUM_ID)
);

CREATE TABLE CUSTOMER(
	CUSTOMER_ID INTEGER NOT NULL CONSTRAINT CUSTOMER_PK PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	BIRTH_DATE DATE NOT NULL,
	CITY VARCHAR(100) NOT NULL
);

CREATE TABLE INVOICE(
	INVOICE_ID INTEGER NOT NULL CONSTRAINT INVOICE_PK PRIMARY KEY,
	ADDRESS VARCHAR(100) NOT NULL,
	CITY VARCHAR(100) NOT NULL,
	INVOICE_DATE DATE NOT NULL,
	CUSTOMER_ID INTEGER NOT NULL CONSTRAINT CUS_IN_FK REFERENCES CUSTOMER(CUSTOMER_ID)
);

CREATE TABLE INVOICE_LINE(
	INVOICE_ID INTEGER NOT NULL CONSTRAINT INL_INV_FK REFERENCES INVOICE(INVOICE_ID),
	TRACK_ID INTEGER NOT NULL CONSTRAINT INL_TR_FK REFERENCES TRACK(TRACK_ID),
	UNIT_PRICE NUMERIC(5,2) NOT NULL,
	QUANTITY INTEGER NOT NULL,
	CONSTRAINT INVOICE_LINE_PK PRIMARY KEY (INVOICE_ID, TRACK_ID)
);

COMMIT;